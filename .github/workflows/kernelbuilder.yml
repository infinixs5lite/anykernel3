w posts
 
Manufacturers
 
What's new
 
Search forums
 
Members
TOPICS
3D Printing
Android Auto
Android Mods
Android TV
Apps & Games
Themes
Wear OS
Smartwatches
Windows 11
XDA Computing
Terms and rules Privacy Security
[DEV] [SCRIPT] Android Kernel Actions - Easily Create an Environment and Build Android Kernels with GitHub Action
 Thread starterlemniskett  Start dateJul 5, 2021  Tagsautomation github kernel
Miscellaneous Android Development

•••

Search This thread
lemniskett
lemniskett
New member 
Jul 5, 2021
#1
Android Kernel Actions - Easily Create an Environment and Build Android Kernels With GitHub Action​
"GitHub Actions makes it easy to automate all your software workflows, now with world-class CI/CD. Build, test, and deploy your code right from GitHub. Make code reviews, branch management, and issue triaging work the way you want." - GitHub.

Well basically, GitHub Action gives you some computing power for building and testing your code. The good thing is, this is FREE! So I though It's a good idea to build kernels with it. No need to let your computer using 100% CPU Usage for a long time, no need to rent a VPS or using cloud provider services like AWS, GCP, etc.

How does this script works? Pretty simple. It launches an Ubuntu container in GitHub Action, Installs necessary packages based on your toolchain preferences, sets environment variables, builds your kernel and zips it with AnyKernel3 (If template provided).

Available toolchains :
GCC from Ubuntu repository
Clang from Ubuntu repository (with or without GNU's binutils)
Proton Clang (with or without GNU's binutils)
AOSP's Clang (with or without GNU's binutils)
Feel free to request another source of toolchain. :)
Toolchain strings

NOTE: If you want to compile with Clang and LLVM without any of GNU's binutils, make sure your kernel source already supports LLVM options, otherwise compilation may fails or it will not use LLVM utils. In that case, use clang toolchain with GNU's binutils.

Instructions​
1) You need to host your kernel source in GitHub and optionally your modified AnyKernel3 template in GitHub

1625460198_grim.png

2) Create a .yml file in .github/workflows:

NOTE: This is a YAML-formatted file, which means indentation matters. I won't explain this example code in detail, refer to GitHub Action documentation.

Example code:
Code:
name: "Build common-android-4.19-stable"              # Description of the workflow.
on:
  push:
    branches: common-android-4.19-stable                                   # Branch to build.
  workflow_dispatch:                                  # Allow to manually trigger workflow.
jobs:
  build:
    name: "Build common-android-4.19-stable"
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout kernel source"                  # Clone the kernel source.
      uses: actions/checkout@v2
    - name: "Checkout zipper"                         # (OPTIONAL) Clone the AnyKernel3 template.
      uses: actions/checkout@v2
      with:
        repository: infinixs5lite/anyKernel3             # Your own AnyKernel3 repository.
        path: zipper                                  # Clone to path "zipper", REQUIRED.
    - name: "common-android-4.19-stable"                    # Build kernel with lemniskett/android-kernel-actions.
      uses: infinixs5lite/common-android-kernel-actions@common-android-4.19-stable
      with:
        arch: arm64                                   # Specify arch
        compiler: gcc/9                               # Specify toolchain to use
        defconfig: vince_defconfig                    # Specify defconfig to use
        image: Image.gz-dtb
